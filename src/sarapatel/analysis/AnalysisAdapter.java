/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.analysis;

import java.util.*;
import sarapatel.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrograma(APrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioInicioPrograma(AVazioInicioPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaracaoVarInicioPrograma(ADeclaracaoVarInicioPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaracaoConstInicioPrograma(ADeclaracaoConstInicioPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProcedimentoFimPrograma(AProcedimentoFimPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoFimPrograma(AFuncaoFimPrograma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecVar(ADecVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecCons(ADecCons node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdIdentificadorComOuSemAtribuicao(AIdIdentificadorComOuSemAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoIdentificadorComOuSemAtribuicao(AAtribuicaoIdentificadorComOuSemAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABaseTipo(ABaseTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayTipo(AArrayTipo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdAtribuicao(AIdAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayComp(AArrayComp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecProcedimento(ADecProcedimento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANullPontoEntradaNull(ANullPontoEntradaNull node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEntradaPontoEntradaNull(AEntradaPontoEntradaNull node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecFuncao(ADecFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParamParametros(AParamParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioParametros(AVazioParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioFechoParametros(AVazioFechoParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParamFechoParametros(AParamFechoParametros node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParametro(AParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoTipoParametro(ATipoTipoParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMatrizTipoParametro(AMatrizTipoParametro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeCasadoComando(ASeCasadoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeNaoCasadoComando(ASeNaoCasadoComando node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeSenaoSeCasamento(ASeSenaoSeCasamento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnquantoSeCasamento(AEnquantoSeCasamento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComandosSeCasamento(AComandosSeCasamento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeComandoSeSemCasamento(ASeComandoSeSemCasamento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeSemCasamentoSeSemCasamento(ASeSemCasamentoSeSemCasamento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnquantoSeSemCasamento(AEnquantoSeSemCasamento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASeSenaoSemCasamentoSeSemCasamento(ASeSenaoSemCasamentoSeSemCasamento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtribuicaoComandoAlternativo(AAtribuicaoComandoAlternativo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamadaProcComandoAlternativo(AChamadaProcComandoAlternativo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoComandoAlternativo(ABlocoComandoAlternativo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoComandos(ABlocoComandos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaracaoVariavelDecVarCons(ADeclaracaoVariavelDecVarCons node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclaracaoConstanteDecVarCons(ADeclaracaoConstanteDecVarCons node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARealValor(ARealValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADecimalValor(ADecimalValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumBinarioValor(ANumBinarioValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringValor(AStringValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdValor(AIdValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayValor(AArrayValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVerdadeValor(AVerdadeValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFalsoValor(AFalsoValor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoExp(ABlocoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABooleanoExp(ABooleanoExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpSomaExpBooleanoEOu(AExpSomaExpBooleanoEOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABooleanoOuExpBooleanoEOu(ABooleanoOuExpBooleanoEOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABooleanoEExpBooleanoEOu(ABooleanoEExpBooleanoEOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpNegacaoExpNegacao(AExpNegacaoExpNegacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpBooleanoCmpExpNegacao(AExpBooleanoCmpExpNegacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpOpSomaExpBooleanoCmp(AExpOpSomaExpBooleanoCmp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComparacaoMaiorExpBooleanoCmp(AComparacaoMaiorExpBooleanoCmp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComparacaoMaiorIgualExpBooleanoCmp(AComparacaoMaiorIgualExpBooleanoCmp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComparacaoIgualExpBooleanoCmp(AComparacaoIgualExpBooleanoCmp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOp2ExpOpSoma(AOp2ExpOpSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASomaExpOpSoma(ASomaExpOpSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMenosSubtracaoExpSubtracao(AMenosSubtracaoExpSubtracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpOpMultExpSubtracao(AExpOpMultExpSubtracao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpValExpOpMult(AExpValExpOpMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiplicacaoExpOpMult(AMultiplicacaoExpOpMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivisaoExpOpMult(ADivisaoExpOpMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARestoExpOpMult(ARestoExpOpMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATernarioExpTernario(ATernarioExpTernario node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpValExpTernario(AExpValExpTernario node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpNegativoExpNegativo(AExpNegativoExpNegativo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpValExpNegativo(AExpValExpNegativo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArrayExpVal(AArrayExpVal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParenteseExpVal(AParenteseExpVal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATipoBaseExpVal(ATipoBaseExpVal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncaoExpVal(AFuncaoExpVal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAValorExpVal(AValorExpVal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABlocoExpressoes(ABlocoExpressoes node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamadaFuncao(AChamadaFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAChamadaProcedimento(AChamadaProcedimento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAConteudoListaListaExp(AConteudoListaListaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaVaziaListaExp(AListaVaziaListaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAListaExpSeparadorListaExp(AListaExpSeparadorListaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVazioSeparadorListaExp(AVazioSeparadorListaExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentarioLinha(TComentarioLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComentario(TComentario node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumDecimal(TNumDecimal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumReal(TNumReal node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumBinario(TNumBinario node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSoma(TSoma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMenos(TMenos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIgualdade(TIgualdade node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSeparador(TSeparador node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaiorIgual(TMaiorIgual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMaior(TMaior node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTipoBase(TTipoBase node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPontoEntrada(TPontoEntrada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComece(TComece node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTermine(TTermine node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSe(TSe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSenao(TSenao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEntao(TEntao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOu(TOu node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNegacao(TNegacao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnquanto(TEnquanto node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTE(TE node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVerdadeiro(TVerdadeiro node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalso(TFalso node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFechaLinha(TFechaLinha node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtribuicao(TAtribuicao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParEsq(TParEsq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTParDir(TParDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDoisPontos(TDoisPontos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDeclVar(TDeclVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDeclConst(TDeclConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColcheteEsq(TColcheteEsq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColcheteDir(TColcheteDir node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFuncao(TFuncao node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProcedimento(TProcedimento node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentificador(TIdentificador node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVazio(TVazio node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
