/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.analysis;

import sarapatel.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAPrograma(APrograma node);
    void caseAVazioInicioPrograma(AVazioInicioPrograma node);
    void caseADeclaracaoVarInicioPrograma(ADeclaracaoVarInicioPrograma node);
    void caseADeclaracaoConstInicioPrograma(ADeclaracaoConstInicioPrograma node);
    void caseAProcedimentoFimPrograma(AProcedimentoFimPrograma node);
    void caseAFuncaoFimPrograma(AFuncaoFimPrograma node);
    void caseADecVar(ADecVar node);
    void caseADecCons(ADecCons node);
    void caseAIdIdentificadorComOuSemAtribuicao(AIdIdentificadorComOuSemAtribuicao node);
    void caseAAtribuicaoIdentificadorComOuSemAtribuicao(AAtribuicaoIdentificadorComOuSemAtribuicao node);
    void caseABaseTipo(ABaseTipo node);
    void caseAArrayTipo(AArrayTipo node);
    void caseAIdAtribuicao(AIdAtribuicao node);
    void caseAArrayComp(AArrayComp node);
    void caseADecProcedimento(ADecProcedimento node);
    void caseANullPontoEntradaNull(ANullPontoEntradaNull node);
    void caseAEntradaPontoEntradaNull(AEntradaPontoEntradaNull node);
    void caseADecFuncao(ADecFuncao node);
    void caseAParamParametros(AParamParametros node);
    void caseAVazioParametros(AVazioParametros node);
    void caseAVazioFechoParametros(AVazioFechoParametros node);
    void caseAParamFechoParametros(AParamFechoParametros node);
    void caseAParametro(AParametro node);
    void caseATipoTipoParametro(ATipoTipoParametro node);
    void caseAMatrizTipoParametro(AMatrizTipoParametro node);
    void caseASeCasadoComando(ASeCasadoComando node);
    void caseASeNaoCasadoComando(ASeNaoCasadoComando node);
    void caseASeSenaoSeCasamento(ASeSenaoSeCasamento node);
    void caseAEnquantoSeCasamento(AEnquantoSeCasamento node);
    void caseAComandosSeCasamento(AComandosSeCasamento node);
    void caseASeComandoSeSemCasamento(ASeComandoSeSemCasamento node);
    void caseASeSemCasamentoSeSemCasamento(ASeSemCasamentoSeSemCasamento node);
    void caseAEnquantoSeSemCasamento(AEnquantoSeSemCasamento node);
    void caseASeSenaoSemCasamentoSeSemCasamento(ASeSenaoSemCasamentoSeSemCasamento node);
    void caseAAtribuicaoComandoAlternativo(AAtribuicaoComandoAlternativo node);
    void caseAChamadaProcComandoAlternativo(AChamadaProcComandoAlternativo node);
    void caseABlocoComandoAlternativo(ABlocoComandoAlternativo node);
    void caseABlocoComandos(ABlocoComandos node);
    void caseADeclaracaoVariavelDecVarCons(ADeclaracaoVariavelDecVarCons node);
    void caseADeclaracaoConstanteDecVarCons(ADeclaracaoConstanteDecVarCons node);
    void caseARealValor(ARealValor node);
    void caseADecimalValor(ADecimalValor node);
    void caseANumBinarioValor(ANumBinarioValor node);
    void caseAStringValor(AStringValor node);
    void caseAIdValor(AIdValor node);
    void caseAArrayValor(AArrayValor node);
    void caseAVerdadeValor(AVerdadeValor node);
    void caseAFalsoValor(AFalsoValor node);
    void caseABlocoExp(ABlocoExp node);
    void caseABooleanoExp(ABooleanoExp node);
    void caseAExpSomaExpBooleanoEOu(AExpSomaExpBooleanoEOu node);
    void caseABooleanoOuExpBooleanoEOu(ABooleanoOuExpBooleanoEOu node);
    void caseABooleanoEExpBooleanoEOu(ABooleanoEExpBooleanoEOu node);
    void caseAExpNegacaoExpNegacao(AExpNegacaoExpNegacao node);
    void caseAExpBooleanoCmpExpNegacao(AExpBooleanoCmpExpNegacao node);
    void caseAExpOpSomaExpBooleanoCmp(AExpOpSomaExpBooleanoCmp node);
    void caseAComparacaoMaiorExpBooleanoCmp(AComparacaoMaiorExpBooleanoCmp node);
    void caseAComparacaoMaiorIgualExpBooleanoCmp(AComparacaoMaiorIgualExpBooleanoCmp node);
    void caseAComparacaoIgualExpBooleanoCmp(AComparacaoIgualExpBooleanoCmp node);
    void caseAOp2ExpOpSoma(AOp2ExpOpSoma node);
    void caseASomaExpOpSoma(ASomaExpOpSoma node);
    void caseAMenosSubtracaoExpSubtracao(AMenosSubtracaoExpSubtracao node);
    void caseAExpOpMultExpSubtracao(AExpOpMultExpSubtracao node);
    void caseAExpValExpOpMult(AExpValExpOpMult node);
    void caseAMultiplicacaoExpOpMult(AMultiplicacaoExpOpMult node);
    void caseADivisaoExpOpMult(ADivisaoExpOpMult node);
    void caseARestoExpOpMult(ARestoExpOpMult node);
    void caseATernarioExpTernario(ATernarioExpTernario node);
    void caseAExpValExpTernario(AExpValExpTernario node);
    void caseAExpNegativoExpNegativo(AExpNegativoExpNegativo node);
    void caseAExpValExpNegativo(AExpValExpNegativo node);
    void caseAArrayExpVal(AArrayExpVal node);
    void caseAParenteseExpVal(AParenteseExpVal node);
    void caseATipoBaseExpVal(ATipoBaseExpVal node);
    void caseAFuncaoExpVal(AFuncaoExpVal node);
    void caseAValorExpVal(AValorExpVal node);
    void caseABlocoExpressoes(ABlocoExpressoes node);
    void caseAChamadaFuncao(AChamadaFuncao node);
    void caseAChamadaProcedimento(AChamadaProcedimento node);
    void caseAConteudoListaListaExp(AConteudoListaListaExp node);
    void caseAListaVaziaListaExp(AListaVaziaListaExp node);
    void caseAListaExpSeparadorListaExp(AListaExpSeparadorListaExp node);
    void caseAVazioSeparadorListaExp(AVazioSeparadorListaExp node);

    void caseTComentarioLinha(TComentarioLinha node);
    void caseTComentario(TComentario node);
    void caseTNumDecimal(TNumDecimal node);
    void caseTNumReal(TNumReal node);
    void caseTNumBinario(TNumBinario node);
    void caseTSoma(TSoma node);
    void caseTMenos(TMenos node);
    void caseTMult(TMult node);
    void caseTDiv(TDiv node);
    void caseTIgualdade(TIgualdade node);
    void caseTMod(TMod node);
    void caseTSeparador(TSeparador node);
    void caseTMaiorIgual(TMaiorIgual node);
    void caseTMaior(TMaior node);
    void caseTTipoBase(TTipoBase node);
    void caseTPontoEntrada(TPontoEntrada node);
    void caseTComece(TComece node);
    void caseTTermine(TTermine node);
    void caseTSe(TSe node);
    void caseTSenao(TSenao node);
    void caseTEntao(TEntao node);
    void caseTOu(TOu node);
    void caseTNegacao(TNegacao node);
    void caseTEnquanto(TEnquanto node);
    void caseTE(TE node);
    void caseTVerdadeiro(TVerdadeiro node);
    void caseTFalso(TFalso node);
    void caseTFechaLinha(TFechaLinha node);
    void caseTAtribuicao(TAtribuicao node);
    void caseTParEsq(TParEsq node);
    void caseTParDir(TParDir node);
    void caseTDoisPontos(TDoisPontos node);
    void caseTDeclVar(TDeclVar node);
    void caseTDeclConst(TDeclConst node);
    void caseTColcheteEsq(TColcheteEsq node);
    void caseTColcheteDir(TColcheteDir node);
    void caseTFuncao(TFuncao node);
    void caseTProcedimento(TProcedimento node);
    void caseTString(TString node);
    void caseTIdentificador(TIdentificador node);
    void caseTVazio(TVazio node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
