/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import java.util.*;
import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class APrograma extends PPrograma
{
    private PInicioPrograma _inicioPrograma_;
    private final LinkedList<PFimPrograma> _fimPrograma_ = new LinkedList<PFimPrograma>();

    public APrograma()
    {
        // Constructor
    }

    public APrograma(
        @SuppressWarnings("hiding") PInicioPrograma _inicioPrograma_,
        @SuppressWarnings("hiding") List<?> _fimPrograma_)
    {
        // Constructor
        setInicioPrograma(_inicioPrograma_);

        setFimPrograma(_fimPrograma_);

    }

    @Override
    public Object clone()
    {
        return new APrograma(
            cloneNode(this._inicioPrograma_),
            cloneList(this._fimPrograma_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPrograma(this);
    }

    public PInicioPrograma getInicioPrograma()
    {
        return this._inicioPrograma_;
    }

    public void setInicioPrograma(PInicioPrograma node)
    {
        if(this._inicioPrograma_ != null)
        {
            this._inicioPrograma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._inicioPrograma_ = node;
    }

    public LinkedList<PFimPrograma> getFimPrograma()
    {
        return this._fimPrograma_;
    }

    public void setFimPrograma(List<?> list)
    {
        for(PFimPrograma e : this._fimPrograma_)
        {
            e.parent(null);
        }
        this._fimPrograma_.clear();

        for(Object obj_e : list)
        {
            PFimPrograma e = (PFimPrograma) obj_e;
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
            this._fimPrograma_.add(e);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._inicioPrograma_)
            + toString(this._fimPrograma_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._inicioPrograma_ == child)
        {
            this._inicioPrograma_ = null;
            return;
        }

        if(this._fimPrograma_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._inicioPrograma_ == oldChild)
        {
            setInicioPrograma((PInicioPrograma) newChild);
            return;
        }

        for(ListIterator<PFimPrograma> i = this._fimPrograma_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PFimPrograma) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
