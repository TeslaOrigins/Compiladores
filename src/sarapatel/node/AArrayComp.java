/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class AArrayComp extends PArrayComp
{
    private TColcheteEsq _colcheteEsq_;
    private TIdentificador _identificador_;
    private TSeparador _separador_;
    private PExp _exp_;
    private TColcheteDir _colcheteDir_;

    public AArrayComp()
    {
        // Constructor
    }

    public AArrayComp(
        @SuppressWarnings("hiding") TColcheteEsq _colcheteEsq_,
        @SuppressWarnings("hiding") TIdentificador _identificador_,
        @SuppressWarnings("hiding") TSeparador _separador_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TColcheteDir _colcheteDir_)
    {
        // Constructor
        setColcheteEsq(_colcheteEsq_);

        setIdentificador(_identificador_);

        setSeparador(_separador_);

        setExp(_exp_);

        setColcheteDir(_colcheteDir_);

    }

    @Override
    public Object clone()
    {
        return new AArrayComp(
            cloneNode(this._colcheteEsq_),
            cloneNode(this._identificador_),
            cloneNode(this._separador_),
            cloneNode(this._exp_),
            cloneNode(this._colcheteDir_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAArrayComp(this);
    }

    public TColcheteEsq getColcheteEsq()
    {
        return this._colcheteEsq_;
    }

    public void setColcheteEsq(TColcheteEsq node)
    {
        if(this._colcheteEsq_ != null)
        {
            this._colcheteEsq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colcheteEsq_ = node;
    }

    public TIdentificador getIdentificador()
    {
        return this._identificador_;
    }

    public void setIdentificador(TIdentificador node)
    {
        if(this._identificador_ != null)
        {
            this._identificador_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identificador_ = node;
    }

    public TSeparador getSeparador()
    {
        return this._separador_;
    }

    public void setSeparador(TSeparador node)
    {
        if(this._separador_ != null)
        {
            this._separador_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._separador_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TColcheteDir getColcheteDir()
    {
        return this._colcheteDir_;
    }

    public void setColcheteDir(TColcheteDir node)
    {
        if(this._colcheteDir_ != null)
        {
            this._colcheteDir_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colcheteDir_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._colcheteEsq_)
            + toString(this._identificador_)
            + toString(this._separador_)
            + toString(this._exp_)
            + toString(this._colcheteDir_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._colcheteEsq_ == child)
        {
            this._colcheteEsq_ = null;
            return;
        }

        if(this._identificador_ == child)
        {
            this._identificador_ = null;
            return;
        }

        if(this._separador_ == child)
        {
            this._separador_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._colcheteDir_ == child)
        {
            this._colcheteDir_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._colcheteEsq_ == oldChild)
        {
            setColcheteEsq((TColcheteEsq) newChild);
            return;
        }

        if(this._identificador_ == oldChild)
        {
            setIdentificador((TIdentificador) newChild);
            return;
        }

        if(this._separador_ == oldChild)
        {
            setSeparador((TSeparador) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._colcheteDir_ == oldChild)
        {
            setColcheteDir((TColcheteDir) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
