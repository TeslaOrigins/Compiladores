/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.node;

import sarapatel.analysis.*;

@SuppressWarnings("nls")
public final class ADivisaoExpOpMult extends PExpOpMult
{
    private PExpOpMult _expOpMult_;
    private TDiv _div_;
    private PExpTernario _expTernario_;

    public ADivisaoExpOpMult()
    {
        // Constructor
    }

    public ADivisaoExpOpMult(
        @SuppressWarnings("hiding") PExpOpMult _expOpMult_,
        @SuppressWarnings("hiding") TDiv _div_,
        @SuppressWarnings("hiding") PExpTernario _expTernario_)
    {
        // Constructor
        setExpOpMult(_expOpMult_);

        setDiv(_div_);

        setExpTernario(_expTernario_);

    }

    @Override
    public Object clone()
    {
        return new ADivisaoExpOpMult(
            cloneNode(this._expOpMult_),
            cloneNode(this._div_),
            cloneNode(this._expTernario_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADivisaoExpOpMult(this);
    }

    public PExpOpMult getExpOpMult()
    {
        return this._expOpMult_;
    }

    public void setExpOpMult(PExpOpMult node)
    {
        if(this._expOpMult_ != null)
        {
            this._expOpMult_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expOpMult_ = node;
    }

    public TDiv getDiv()
    {
        return this._div_;
    }

    public void setDiv(TDiv node)
    {
        if(this._div_ != null)
        {
            this._div_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._div_ = node;
    }

    public PExpTernario getExpTernario()
    {
        return this._expTernario_;
    }

    public void setExpTernario(PExpTernario node)
    {
        if(this._expTernario_ != null)
        {
            this._expTernario_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expTernario_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._expOpMult_)
            + toString(this._div_)
            + toString(this._expTernario_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._expOpMult_ == child)
        {
            this._expOpMult_ = null;
            return;
        }

        if(this._div_ == child)
        {
            this._div_ = null;
            return;
        }

        if(this._expTernario_ == child)
        {
            this._expTernario_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._expOpMult_ == oldChild)
        {
            setExpOpMult((PExpOpMult) newChild);
            return;
        }

        if(this._div_ == oldChild)
        {
            setDiv((TDiv) newChild);
            return;
        }

        if(this._expTernario_ == oldChild)
        {
            setExpTernario((PExpTernario) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
