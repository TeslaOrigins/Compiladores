/* This file was generated by SableCC (http://www.sablecc.org/). */

package sarapatel.parser;

import sarapatel.lexer.*;
import sarapatel.node.*;
import sarapatel.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce APrograma */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AVazioInicioPrograma */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list, false);
            }
            break;
            case 2: /* reduce ADeclaracaoVarInicioPrograma */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list, false);
            }
            break;
            case 3: /* reduce ADeclaracaoConstInicioPrograma */
            {
                ArrayList<Object> list = new3();
                push(goTo(1), list, false);
            }
            break;
            case 4: /* reduce AProcedimentoFimPrograma */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list, false);
            }
            break;
            case 5: /* reduce AFuncaoFimPrograma */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list, false);
            }
            break;
            case 6: /* reduce ADecVar */
            {
                ArrayList<Object> list = new6();
                push(goTo(3), list, false);
            }
            break;
            case 7: /* reduce ADecCons */
            {
                ArrayList<Object> list = new7();
                push(goTo(4), list, false);
            }
            break;
            case 8: /* reduce AIdIdentificadorComOuSemAtribuicao */
            {
                ArrayList<Object> list = new8();
                push(goTo(5), list, false);
            }
            break;
            case 9: /* reduce AAtribuicaoIdentificadorComOuSemAtribuicao */
            {
                ArrayList<Object> list = new9();
                push(goTo(5), list, false);
            }
            break;
            case 10: /* reduce ABaseTipo */
            {
                ArrayList<Object> list = new10();
                push(goTo(6), list, false);
            }
            break;
            case 11: /* reduce AArrayTipo */
            {
                ArrayList<Object> list = new11();
                push(goTo(6), list, false);
            }
            break;
            case 12: /* reduce AIdAtribuicao */
            {
                ArrayList<Object> list = new12();
                push(goTo(7), list, false);
            }
            break;
            case 13: /* reduce AArrayComp */
            {
                ArrayList<Object> list = new13();
                push(goTo(8), list, false);
            }
            break;
            case 14: /* reduce ADecProcedimento */
            {
                ArrayList<Object> list = new14();
                push(goTo(9), list, false);
            }
            break;
            case 15: /* reduce ANullPontoEntradaNull */
            {
                ArrayList<Object> list = new15();
                push(goTo(10), list, false);
            }
            break;
            case 16: /* reduce AEntradaPontoEntradaNull */
            {
                ArrayList<Object> list = new16();
                push(goTo(10), list, false);
            }
            break;
            case 17: /* reduce ADecFuncao */
            {
                ArrayList<Object> list = new17();
                push(goTo(11), list, false);
            }
            break;
            case 18: /* reduce AParamParametros */
            {
                ArrayList<Object> list = new18();
                push(goTo(12), list, false);
            }
            break;
            case 19: /* reduce AVazioParametros */
            {
                ArrayList<Object> list = new19();
                push(goTo(12), list, false);
            }
            break;
            case 20: /* reduce AVazioFechoParametros */
            {
                ArrayList<Object> list = new20();
                push(goTo(13), list, false);
            }
            break;
            case 21: /* reduce AParamFechoParametros */
            {
                ArrayList<Object> list = new21();
                push(goTo(13), list, false);
            }
            break;
            case 22: /* reduce AParametro */
            {
                ArrayList<Object> list = new22();
                push(goTo(14), list, false);
            }
            break;
            case 23: /* reduce ATipoTipoParametro */
            {
                ArrayList<Object> list = new23();
                push(goTo(15), list, false);
            }
            break;
            case 24: /* reduce AMatrizTipoParametro */
            {
                ArrayList<Object> list = new24();
                push(goTo(15), list, false);
            }
            break;
            case 25: /* reduce ASeCasadoComando */
            {
                ArrayList<Object> list = new25();
                push(goTo(16), list, false);
            }
            break;
            case 26: /* reduce ASeNaoCasadoComando */
            {
                ArrayList<Object> list = new26();
                push(goTo(16), list, false);
            }
            break;
            case 27: /* reduce ASeSenaoSeCasamento */
            {
                ArrayList<Object> list = new27();
                push(goTo(17), list, false);
            }
            break;
            case 28: /* reduce AEnquantoSeCasamento */
            {
                ArrayList<Object> list = new28();
                push(goTo(17), list, false);
            }
            break;
            case 29: /* reduce AComandosSeCasamento */
            {
                ArrayList<Object> list = new29();
                push(goTo(17), list, false);
            }
            break;
            case 30: /* reduce ASeComandoSeSemCasamento */
            {
                ArrayList<Object> list = new30();
                push(goTo(18), list, false);
            }
            break;
            case 31: /* reduce ASeSemCasamentoSeSemCasamento */
            {
                ArrayList<Object> list = new31();
                push(goTo(18), list, false);
            }
            break;
            case 32: /* reduce AEnquantoSeSemCasamento */
            {
                ArrayList<Object> list = new32();
                push(goTo(18), list, false);
            }
            break;
            case 33: /* reduce ASeSenaoSemCasamentoSeSemCasamento */
            {
                ArrayList<Object> list = new33();
                push(goTo(18), list, false);
            }
            break;
            case 34: /* reduce AAtribuicaoComandoAlternativo */
            {
                ArrayList<Object> list = new34();
                push(goTo(19), list, false);
            }
            break;
            case 35: /* reduce AChamadaProcComandoAlternativo */
            {
                ArrayList<Object> list = new35();
                push(goTo(19), list, false);
            }
            break;
            case 36: /* reduce ABlocoComandoAlternativo */
            {
                ArrayList<Object> list = new36();
                push(goTo(19), list, false);
            }
            break;
            case 37: /* reduce AAblococomandos1BlocoComandos */
            {
                ArrayList<Object> list = new37();
                push(goTo(20), list, false);
            }
            break;
            case 38: /* reduce AAblococomandos2BlocoComandos */
            {
                ArrayList<Object> list = new38();
                push(goTo(20), list, false);
            }
            break;
            case 39: /* reduce AAblococomandos3BlocoComandos */
            {
                ArrayList<Object> list = new39();
                push(goTo(20), list, false);
            }
            break;
            case 40: /* reduce AAblococomandos4BlocoComandos */
            {
                ArrayList<Object> list = new40();
                push(goTo(20), list, false);
            }
            break;
            case 41: /* reduce ADeclaracaoVariavelDecVarCons */
            {
                ArrayList<Object> list = new41();
                push(goTo(21), list, false);
            }
            break;
            case 42: /* reduce ADeclaracaoConstanteDecVarCons */
            {
                ArrayList<Object> list = new42();
                push(goTo(21), list, false);
            }
            break;
            case 43: /* reduce ARealValor */
            {
                ArrayList<Object> list = new43();
                push(goTo(22), list, false);
            }
            break;
            case 44: /* reduce ADecimalValor */
            {
                ArrayList<Object> list = new44();
                push(goTo(22), list, false);
            }
            break;
            case 45: /* reduce ANumBinarioValor */
            {
                ArrayList<Object> list = new45();
                push(goTo(22), list, false);
            }
            break;
            case 46: /* reduce AStringValor */
            {
                ArrayList<Object> list = new46();
                push(goTo(22), list, false);
            }
            break;
            case 47: /* reduce AIdValor */
            {
                ArrayList<Object> list = new47();
                push(goTo(22), list, false);
            }
            break;
            case 48: /* reduce AArrayValor */
            {
                ArrayList<Object> list = new48();
                push(goTo(22), list, false);
            }
            break;
            case 49: /* reduce AVerdadeValor */
            {
                ArrayList<Object> list = new49();
                push(goTo(22), list, false);
            }
            break;
            case 50: /* reduce AFalsoValor */
            {
                ArrayList<Object> list = new50();
                push(goTo(22), list, false);
            }
            break;
            case 51: /* reduce ABlocoExp */
            {
                ArrayList<Object> list = new51();
                push(goTo(23), list, false);
            }
            break;
            case 52: /* reduce ABooleanoExp */
            {
                ArrayList<Object> list = new52();
                push(goTo(23), list, false);
            }
            break;
            case 53: /* reduce AExpSomaExpBooleanoEOu */
            {
                ArrayList<Object> list = new53();
                push(goTo(24), list, false);
            }
            break;
            case 54: /* reduce ABooleanoOuExpBooleanoEOu */
            {
                ArrayList<Object> list = new54();
                push(goTo(24), list, false);
            }
            break;
            case 55: /* reduce ABooleanoEExpBooleanoEOu */
            {
                ArrayList<Object> list = new55();
                push(goTo(24), list, false);
            }
            break;
            case 56: /* reduce AExpNegacaoExpNegacao */
            {
                ArrayList<Object> list = new56();
                push(goTo(25), list, false);
            }
            break;
            case 57: /* reduce AExpBooleanoCmpExpNegacao */
            {
                ArrayList<Object> list = new57();
                push(goTo(25), list, false);
            }
            break;
            case 58: /* reduce AExpOpSomaExpBooleanoCmp */
            {
                ArrayList<Object> list = new58();
                push(goTo(26), list, false);
            }
            break;
            case 59: /* reduce AComparacaoMaiorExpBooleanoCmp */
            {
                ArrayList<Object> list = new59();
                push(goTo(26), list, false);
            }
            break;
            case 60: /* reduce AComparacaoMaiorIgualExpBooleanoCmp */
            {
                ArrayList<Object> list = new60();
                push(goTo(26), list, false);
            }
            break;
            case 61: /* reduce AComparacaoIgualExpBooleanoCmp */
            {
                ArrayList<Object> list = new61();
                push(goTo(26), list, false);
            }
            break;
            case 62: /* reduce AOp2ExpOpSoma */
            {
                ArrayList<Object> list = new62();
                push(goTo(27), list, false);
            }
            break;
            case 63: /* reduce ASomaExpOpSoma */
            {
                ArrayList<Object> list = new63();
                push(goTo(27), list, false);
            }
            break;
            case 64: /* reduce AMenosSubtracaoExpSubtracao */
            {
                ArrayList<Object> list = new64();
                push(goTo(28), list, false);
            }
            break;
            case 65: /* reduce AExpOpMultExpSubtracao */
            {
                ArrayList<Object> list = new65();
                push(goTo(28), list, false);
            }
            break;
            case 66: /* reduce AExpValExpOpMult */
            {
                ArrayList<Object> list = new66();
                push(goTo(29), list, false);
            }
            break;
            case 67: /* reduce AMultiplicacaoExpOpMult */
            {
                ArrayList<Object> list = new67();
                push(goTo(29), list, false);
            }
            break;
            case 68: /* reduce ADivisaoExpOpMult */
            {
                ArrayList<Object> list = new68();
                push(goTo(29), list, false);
            }
            break;
            case 69: /* reduce ARestoExpOpMult */
            {
                ArrayList<Object> list = new69();
                push(goTo(29), list, false);
            }
            break;
            case 70: /* reduce ATernarioExpTernario */
            {
                ArrayList<Object> list = new70();
                push(goTo(30), list, false);
            }
            break;
            case 71: /* reduce AExpValExpTernario */
            {
                ArrayList<Object> list = new71();
                push(goTo(30), list, false);
            }
            break;
            case 72: /* reduce AExpNegativoExpNegativo */
            {
                ArrayList<Object> list = new72();
                push(goTo(31), list, false);
            }
            break;
            case 73: /* reduce AExpValExpNegativo */
            {
                ArrayList<Object> list = new73();
                push(goTo(31), list, false);
            }
            break;
            case 74: /* reduce AArrayExpVal */
            {
                ArrayList<Object> list = new74();
                push(goTo(32), list, false);
            }
            break;
            case 75: /* reduce AParenteseExpVal */
            {
                ArrayList<Object> list = new75();
                push(goTo(32), list, false);
            }
            break;
            case 76: /* reduce ATipoBaseExpVal */
            {
                ArrayList<Object> list = new76();
                push(goTo(32), list, false);
            }
            break;
            case 77: /* reduce AFuncaoExpVal */
            {
                ArrayList<Object> list = new77();
                push(goTo(32), list, false);
            }
            break;
            case 78: /* reduce AValorExpVal */
            {
                ArrayList<Object> list = new78();
                push(goTo(32), list, false);
            }
            break;
            case 79: /* reduce AAblocoexpressoes1BlocoExpressoes */
            {
                ArrayList<Object> list = new79();
                push(goTo(33), list, false);
            }
            break;
            case 80: /* reduce AAblocoexpressoes2BlocoExpressoes */
            {
                ArrayList<Object> list = new80();
                push(goTo(33), list, false);
            }
            break;
            case 81: /* reduce AChamadaFuncao */
            {
                ArrayList<Object> list = new81();
                push(goTo(34), list, false);
            }
            break;
            case 82: /* reduce AChamadaProcedimento */
            {
                ArrayList<Object> list = new82();
                push(goTo(35), list, false);
            }
            break;
            case 83: /* reduce AConteudoListaListaExp */
            {
                ArrayList<Object> list = new83();
                push(goTo(36), list, false);
            }
            break;
            case 84: /* reduce AListaVaziaListaExp */
            {
                ArrayList<Object> list = new84();
                push(goTo(36), list, false);
            }
            break;
            case 85: /* reduce AListaExpSeparadorListaExp */
            {
                ArrayList<Object> list = new85();
                push(goTo(37), list, false);
            }
            break;
            case 86: /* reduce AVazioSeparadorListaExp */
            {
                ArrayList<Object> list = new86();
                push(goTo(37), list, false);
            }
            break;
            case 87: /* reduce ATerminal$FimPrograma */
            {
                ArrayList<Object> list = new87();
                push(goTo(38), list, true);
            }
            break;
            case 88: /* reduce ANonTerminal$FimPrograma */
            {
                ArrayList<Object> list = new88();
                push(goTo(38), list, true);
            }
            break;
            case 89: /* reduce ATerminal$DecVarCons */
            {
                ArrayList<Object> list = new89();
                push(goTo(39), list, true);
            }
            break;
            case 90: /* reduce ANonTerminal$DecVarCons */
            {
                ArrayList<Object> list = new90();
                push(goTo(39), list, true);
            }
            break;
            case 91: /* reduce ATerminal$Comando */
            {
                ArrayList<Object> list = new91();
                push(goTo(40), list, true);
            }
            break;
            case 92: /* reduce ANonTerminal$Comando */
            {
                ArrayList<Object> list = new92();
                push(goTo(40), list, true);
            }
            break;
            case 93: /* reduce ATerminal$DecCons */
            {
                ArrayList<Object> list = new93();
                push(goTo(41), list, true);
            }
            break;
            case 94: /* reduce ANonTerminal$DecCons */
            {
                ArrayList<Object> list = new94();
                push(goTo(41), list, true);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce APrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        PInicioPrograma pinicioprogramaNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        pinicioprogramaNode2 = (PInicioPrograma)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }

        pprogramaNode1 = new APrograma(pinicioprogramaNode2, listNode4);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AVazioInicioPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PInicioPrograma pinicioprogramaNode1;
        {
            // Block

        pinicioprogramaNode1 = new AVazioInicioPrograma();
        }
	nodeList.add(pinicioprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce ADeclaracaoVarInicioPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInicioPrograma pinicioprogramaNode1;
        {
            // Block
        PInicioPrograma pinicioprogramaNode2;
        PDecVar pdecvarNode3;
        pinicioprogramaNode2 = (PInicioPrograma)nodeArrayList1.get(0);
        pdecvarNode3 = (PDecVar)nodeArrayList2.get(0);

        pinicioprogramaNode1 = new ADeclaracaoVarInicioPrograma(pinicioprogramaNode2, pdecvarNode3);
        }
	nodeList.add(pinicioprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce ADeclaracaoConstInicioPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PInicioPrograma pinicioprogramaNode1;
        {
            // Block
        PInicioPrograma pinicioprogramaNode2;
        PDecCons pdecconsNode3;
        pinicioprogramaNode2 = (PInicioPrograma)nodeArrayList1.get(0);
        pdecconsNode3 = (PDecCons)nodeArrayList2.get(0);

        pinicioprogramaNode1 = new ADeclaracaoConstInicioPrograma(pinicioprogramaNode2, pdecconsNode3);
        }
	nodeList.add(pinicioprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AProcedimentoFimPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFimPrograma pfimprogramaNode1;
        {
            // Block
        PDecProcedimento pdecprocedimentoNode2;
        pdecprocedimentoNode2 = (PDecProcedimento)nodeArrayList1.get(0);

        pfimprogramaNode1 = new AProcedimentoFimPrograma(pdecprocedimentoNode2);
        }
	nodeList.add(pfimprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce AFuncaoFimPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFimPrograma pfimprogramaNode1;
        {
            // Block
        PDecFuncao pdecfuncaoNode2;
        pdecfuncaoNode2 = (PDecFuncao)nodeArrayList1.get(0);

        pfimprogramaNode1 = new AFuncaoFimPrograma(pdecfuncaoNode2);
        }
	nodeList.add(pfimprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce ADecVar */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecVar pdecvarNode1;
        {
            // Block
        TDeclVar tdeclvarNode2;
        TDoisPontos tdoispontosNode3;
        PTipo ptipoNode4;
        PIdentificadorComOuSemAtribuicao pidentificadorcomousematribuicaoNode5;
        TFechaLinha tfechalinhaNode6;
        tdeclvarNode2 = (TDeclVar)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        ptipoNode4 = (PTipo)nodeArrayList3.get(0);
        pidentificadorcomousematribuicaoNode5 = (PIdentificadorComOuSemAtribuicao)nodeArrayList4.get(0);
        tfechalinhaNode6 = (TFechaLinha)nodeArrayList5.get(0);

        pdecvarNode1 = new ADecVar(tdeclvarNode2, tdoispontosNode3, ptipoNode4, pidentificadorcomousematribuicaoNode5, tfechalinhaNode6);
        }
	nodeList.add(pdecvarNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce ADecCons */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecCons pdecconsNode1;
        {
            // Block
        TDeclConst tdeclconstNode2;
        TDoisPontos tdoispontosNode3;
        PTipo ptipoNode4;
        PIdAtribuicao pidatribuicaoNode5;
        TFechaLinha tfechalinhaNode6;
        tdeclconstNode2 = (TDeclConst)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        ptipoNode4 = (PTipo)nodeArrayList3.get(0);
        pidatribuicaoNode5 = (PIdAtribuicao)nodeArrayList4.get(0);
        tfechalinhaNode6 = (TFechaLinha)nodeArrayList5.get(0);

        pdecconsNode1 = new ADecCons(tdeclconstNode2, tdoispontosNode3, ptipoNode4, pidatribuicaoNode5, tfechalinhaNode6);
        }
	nodeList.add(pdecconsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AIdIdentificadorComOuSemAtribuicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificadorComOuSemAtribuicao pidentificadorcomousematribuicaoNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pidentificadorcomousematribuicaoNode1 = new AIdIdentificadorComOuSemAtribuicao(tidentificadorNode2);
        }
	nodeList.add(pidentificadorcomousematribuicaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AAtribuicaoIdentificadorComOuSemAtribuicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdentificadorComOuSemAtribuicao pidentificadorcomousematribuicaoNode1;
        {
            // Block
        PIdAtribuicao pidatribuicaoNode2;
        pidatribuicaoNode2 = (PIdAtribuicao)nodeArrayList1.get(0);

        pidentificadorcomousematribuicaoNode1 = new AAtribuicaoIdentificadorComOuSemAtribuicao(pidatribuicaoNode2);
        }
	nodeList.add(pidentificadorcomousematribuicaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce ABaseTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TTipoBase ttipobaseNode2;
        ttipobaseNode2 = (TTipoBase)nodeArrayList1.get(0);

        ptipoNode1 = new ABaseTipo(ttipobaseNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce AArrayTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        PTipo ptipoNode2;
        TColcheteEsq tcolcheteesqNode3;
        PExp pexpNode4;
        TColcheteDir tcolchetedirNode5;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tcolcheteesqNode3 = (TColcheteEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tcolchetedirNode5 = (TColcheteDir)nodeArrayList4.get(0);

        ptipoNode1 = new AArrayTipo(ptipoNode2, tcolcheteesqNode3, pexpNode4, tcolchetedirNode5);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AIdAtribuicao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PIdAtribuicao pidatribuicaoNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TAtribuicao tatribuicaoNode3;
        PExp pexpNode4;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tatribuicaoNode3 = (TAtribuicao)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pidatribuicaoNode1 = new AIdAtribuicao(tidentificadorNode2, tatribuicaoNode3, pexpNode4);
        }
	nodeList.add(pidatribuicaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce AArrayComp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PArrayComp parraycompNode1;
        {
            // Block
        TColcheteEsq tcolcheteesqNode2;
        TIdentificador tidentificadorNode3;
        TSeparador tseparadorNode4;
        PExp pexpNode5;
        TColcheteDir tcolchetedirNode6;
        tcolcheteesqNode2 = (TColcheteEsq)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        tseparadorNode4 = (TSeparador)nodeArrayList3.get(0);
        pexpNode5 = (PExp)nodeArrayList4.get(0);
        tcolchetedirNode6 = (TColcheteDir)nodeArrayList5.get(0);

        parraycompNode1 = new AArrayComp(tcolcheteesqNode2, tidentificadorNode3, tseparadorNode4, pexpNode5, tcolchetedirNode6);
        }
	nodeList.add(parraycompNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ADecProcedimento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecProcedimento pdecprocedimentoNode1;
        {
            // Block
        PPontoEntradaNull ppontoentradanullNode2;
        TProcedimento tprocedimentoNode3;
        TDoisPontos tdoispontosNode4;
        TIdentificador tidentificadorNode5;
        TParEsq tparesqNode6;
        PParametros pparametrosNode7;
        TParDir tpardirNode8;
        PComando pcomandoNode9;
        ppontoentradanullNode2 = (PPontoEntradaNull)nodeArrayList1.get(0);
        tprocedimentoNode3 = (TProcedimento)nodeArrayList2.get(0);
        tdoispontosNode4 = (TDoisPontos)nodeArrayList3.get(0);
        tidentificadorNode5 = (TIdentificador)nodeArrayList4.get(0);
        tparesqNode6 = (TParEsq)nodeArrayList5.get(0);
        pparametrosNode7 = (PParametros)nodeArrayList6.get(0);
        tpardirNode8 = (TParDir)nodeArrayList7.get(0);
        pcomandoNode9 = (PComando)nodeArrayList8.get(0);

        pdecprocedimentoNode1 = new ADecProcedimento(ppontoentradanullNode2, tprocedimentoNode3, tdoispontosNode4, tidentificadorNode5, tparesqNode6, pparametrosNode7, tpardirNode8, pcomandoNode9);
        }
	nodeList.add(pdecprocedimentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce ANullPontoEntradaNull */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PPontoEntradaNull ppontoentradanullNode1;
        {
            // Block

        ppontoentradanullNode1 = new ANullPontoEntradaNull();
        }
	nodeList.add(ppontoentradanullNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce AEntradaPontoEntradaNull */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPontoEntradaNull ppontoentradanullNode1;
        {
            // Block
        TPontoEntrada tpontoentradaNode2;
        tpontoentradaNode2 = (TPontoEntrada)nodeArrayList1.get(0);

        ppontoentradanullNode1 = new AEntradaPontoEntradaNull(tpontoentradaNode2);
        }
	nodeList.add(ppontoentradanullNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce ADecFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecFuncao pdecfuncaoNode1;
        {
            // Block
        TFuncao tfuncaoNode2;
        TDoisPontos tdoispontosNode3;
        PTipo ptipoNode4;
        TIdentificador tidentificadorNode5;
        TParEsq tparesqNode6;
        PParametros pparametrosNode7;
        TParDir tpardirNode8;
        PExp pexpNode9;
        tfuncaoNode2 = (TFuncao)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        ptipoNode4 = (PTipo)nodeArrayList3.get(0);
        tidentificadorNode5 = (TIdentificador)nodeArrayList4.get(0);
        tparesqNode6 = (TParEsq)nodeArrayList5.get(0);
        pparametrosNode7 = (PParametros)nodeArrayList6.get(0);
        tpardirNode8 = (TParDir)nodeArrayList7.get(0);
        pexpNode9 = (PExp)nodeArrayList8.get(0);

        pdecfuncaoNode1 = new ADecFuncao(tfuncaoNode2, tdoispontosNode3, ptipoNode4, tidentificadorNode5, tparesqNode6, pparametrosNode7, tpardirNode8, pexpNode9);
        }
	nodeList.add(pdecfuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce AParamParametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametros pparametrosNode1;
        {
            // Block
        PParametro pparametroNode2;
        PFechoParametros pfechoparametrosNode3;
        pparametroNode2 = (PParametro)nodeArrayList1.get(0);
        pfechoparametrosNode3 = (PFechoParametros)nodeArrayList2.get(0);

        pparametrosNode1 = new AParamParametros(pparametroNode2, pfechoparametrosNode3);
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AVazioParametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PParametros pparametrosNode1;
        {
            // Block

        pparametrosNode1 = new AVazioParametros();
        }
	nodeList.add(pparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce AVazioFechoParametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PFechoParametros pfechoparametrosNode1;
        {
            // Block

        pfechoparametrosNode1 = new AVazioFechoParametros();
        }
	nodeList.add(pfechoparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AParamFechoParametros */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFechoParametros pfechoparametrosNode1;
        {
            // Block
        PFechoParametros pfechoparametrosNode2;
        TSeparador tseparadorNode3;
        PParametro pparametroNode4;
        pfechoparametrosNode2 = (PFechoParametros)nodeArrayList1.get(0);
        tseparadorNode3 = (TSeparador)nodeArrayList2.get(0);
        pparametroNode4 = (PParametro)nodeArrayList3.get(0);

        pfechoparametrosNode1 = new AParamFechoParametros(pfechoparametrosNode2, tseparadorNode3, pparametroNode4);
        }
	nodeList.add(pfechoparametrosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PParametro pparametroNode1;
        {
            // Block
        PTipoParametro ptipoparametroNode2;
        TIdentificador tidentificadorNode3;
        ptipoparametroNode2 = (PTipoParametro)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);

        pparametroNode1 = new AParametro(ptipoparametroNode2, tidentificadorNode3);
        }
	nodeList.add(pparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce ATipoTipoParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoParametro ptipoparametroNode1;
        {
            // Block
        TTipoBase ttipobaseNode2;
        ttipobaseNode2 = (TTipoBase)nodeArrayList1.get(0);

        ptipoparametroNode1 = new ATipoTipoParametro(ttipobaseNode2);
        }
	nodeList.add(ptipoparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce AMatrizTipoParametro */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipoParametro ptipoparametroNode1;
        {
            // Block
        PTipoParametro ptipoparametroNode2;
        TColcheteEsq tcolcheteesqNode3;
        TColcheteDir tcolchetedirNode4;
        ptipoparametroNode2 = (PTipoParametro)nodeArrayList1.get(0);
        tcolcheteesqNode3 = (TColcheteEsq)nodeArrayList2.get(0);
        tcolchetedirNode4 = (TColcheteDir)nodeArrayList3.get(0);

        ptipoparametroNode1 = new AMatrizTipoParametro(ptipoparametroNode2, tcolcheteesqNode3, tcolchetedirNode4);
        }
	nodeList.add(ptipoparametroNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce ASeCasadoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PSeCasamento psecasamentoNode2;
        psecasamentoNode2 = (PSeCasamento)nodeArrayList1.get(0);

        pcomandoNode1 = new ASeCasadoComando(psecasamentoNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce ASeNaoCasadoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PSeSemCasamento psesemcasamentoNode2;
        psesemcasamentoNode2 = (PSeSemCasamento)nodeArrayList1.get(0);

        pcomandoNode1 = new ASeNaoCasadoComando(psesemcasamentoNode2);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce ASeSenaoSeCasamento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeCasamento psecasamentoNode1;
        {
            // Block
        TSe tseNode2;
        TParEsq tparesqNode3;
        PExp pexpNode4;
        TParDir tpardirNode5;
        PSeCasamento psecasamentoNode6;
        TSenao tsenaoNode7;
        PSeCasamento psecasamentoNode8;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        psecasamentoNode6 = (PSeCasamento)nodeArrayList5.get(0);
        tsenaoNode7 = (TSenao)nodeArrayList6.get(0);
        psecasamentoNode8 = (PSeCasamento)nodeArrayList7.get(0);

        psecasamentoNode1 = new ASeSenaoSeCasamento(tseNode2, tparesqNode3, pexpNode4, tpardirNode5, psecasamentoNode6, tsenaoNode7, psecasamentoNode8);
        }
	nodeList.add(psecasamentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AEnquantoSeCasamento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeCasamento psecasamentoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TParEsq tparesqNode3;
        PExp pexpNode4;
        TParDir tpardirNode5;
        PSeCasamento psecasamentoNode6;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        psecasamentoNode6 = (PSeCasamento)nodeArrayList5.get(0);

        psecasamentoNode1 = new AEnquantoSeCasamento(tenquantoNode2, tparesqNode3, pexpNode4, tpardirNode5, psecasamentoNode6);
        }
	nodeList.add(psecasamentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AComandosSeCasamento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeCasamento psecasamentoNode1;
        {
            // Block
        PComandoAlternativo pcomandoalternativoNode2;
        pcomandoalternativoNode2 = (PComandoAlternativo)nodeArrayList1.get(0);

        psecasamentoNode1 = new AComandosSeCasamento(pcomandoalternativoNode2);
        }
	nodeList.add(psecasamentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce ASeComandoSeSemCasamento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeSemCasamento psesemcasamentoNode1;
        {
            // Block
        TSe tseNode2;
        TParEsq tparesqNode3;
        PExp pexpNode4;
        TParDir tpardirNode5;
        PComandoAlternativo pcomandoalternativoNode6;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        pcomandoalternativoNode6 = (PComandoAlternativo)nodeArrayList5.get(0);

        psesemcasamentoNode1 = new ASeComandoSeSemCasamento(tseNode2, tparesqNode3, pexpNode4, tpardirNode5, pcomandoalternativoNode6);
        }
	nodeList.add(psesemcasamentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce ASeSemCasamentoSeSemCasamento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeSemCasamento psesemcasamentoNode1;
        {
            // Block
        TSe tseNode2;
        TParEsq tparesqNode3;
        PExp pexpNode4;
        TParDir tpardirNode5;
        PSeSemCasamento psesemcasamentoNode6;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        psesemcasamentoNode6 = (PSeSemCasamento)nodeArrayList5.get(0);

        psesemcasamentoNode1 = new ASeSemCasamentoSeSemCasamento(tseNode2, tparesqNode3, pexpNode4, tpardirNode5, psesemcasamentoNode6);
        }
	nodeList.add(psesemcasamentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AEnquantoSeSemCasamento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeSemCasamento psesemcasamentoNode1;
        {
            // Block
        TEnquanto tenquantoNode2;
        TParEsq tparesqNode3;
        PExp pexpNode4;
        TParDir tpardirNode5;
        PSeSemCasamento psesemcasamentoNode6;
        tenquantoNode2 = (TEnquanto)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        psesemcasamentoNode6 = (PSeSemCasamento)nodeArrayList5.get(0);

        psesemcasamentoNode1 = new AEnquantoSeSemCasamento(tenquantoNode2, tparesqNode3, pexpNode4, tpardirNode5, psesemcasamentoNode6);
        }
	nodeList.add(psesemcasamentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce ASeSenaoSemCasamentoSeSemCasamento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeSemCasamento psesemcasamentoNode1;
        {
            // Block
        TSe tseNode2;
        TParEsq tparesqNode3;
        PExp pexpNode4;
        TParDir tpardirNode5;
        PSeCasamento psecasamentoNode6;
        TSenao tsenaoNode7;
        PSeSemCasamento psesemcasamentoNode8;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        psecasamentoNode6 = (PSeCasamento)nodeArrayList5.get(0);
        tsenaoNode7 = (TSenao)nodeArrayList6.get(0);
        psesemcasamentoNode8 = (PSeSemCasamento)nodeArrayList7.get(0);

        psesemcasamentoNode1 = new ASeSenaoSemCasamentoSeSemCasamento(tseNode2, tparesqNode3, pexpNode4, tpardirNode5, psecasamentoNode6, tsenaoNode7, psesemcasamentoNode8);
        }
	nodeList.add(psesemcasamentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce AAtribuicaoComandoAlternativo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAlternativo pcomandoalternativoNode1;
        {
            // Block
        PIdAtribuicao pidatribuicaoNode2;
        TFechaLinha tfechalinhaNode3;
        pidatribuicaoNode2 = (PIdAtribuicao)nodeArrayList1.get(0);
        tfechalinhaNode3 = (TFechaLinha)nodeArrayList2.get(0);

        pcomandoalternativoNode1 = new AAtribuicaoComandoAlternativo(pidatribuicaoNode2, tfechalinhaNode3);
        }
	nodeList.add(pcomandoalternativoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AChamadaProcComandoAlternativo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAlternativo pcomandoalternativoNode1;
        {
            // Block
        PChamadaProcedimento pchamadaprocedimentoNode2;
        TFechaLinha tfechalinhaNode3;
        pchamadaprocedimentoNode2 = (PChamadaProcedimento)nodeArrayList1.get(0);
        tfechalinhaNode3 = (TFechaLinha)nodeArrayList2.get(0);

        pcomandoalternativoNode1 = new AChamadaProcComandoAlternativo(pchamadaprocedimentoNode2, tfechalinhaNode3);
        }
	nodeList.add(pcomandoalternativoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce ABlocoComandoAlternativo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComandoAlternativo pcomandoalternativoNode1;
        {
            // Block
        PBlocoComandos pblococomandosNode2;
        pblococomandosNode2 = (PBlocoComandos)nodeArrayList1.get(0);

        pcomandoalternativoNode1 = new ABlocoComandoAlternativo(pblococomandosNode2);
        }
	nodeList.add(pcomandoalternativoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AAblococomandos1BlocoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoComandos pblococomandosNode1;
        {
            // Block
        TComece tcomeceNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        TTermine ttermineNode5;
        tcomeceNode2 = (TComece)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        }
        ttermineNode5 = (TTermine)nodeArrayList2.get(0);

        pblococomandosNode1 = new ABlocoComandos(tcomeceNode2, listNode3, listNode4, ttermineNode5);
        }
	nodeList.add(pblococomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AAblococomandos2BlocoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoComandos pblococomandosNode1;
        {
            // Block
        TComece tcomeceNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TTermine ttermineNode6;
        tcomeceNode2 = (TComece)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        }
        ttermineNode6 = (TTermine)nodeArrayList3.get(0);

        pblococomandosNode1 = new ABlocoComandos(tcomeceNode2, listNode4, listNode5, ttermineNode6);
        }
	nodeList.add(pblococomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AAblococomandos3BlocoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoComandos pblococomandosNode1;
        {
            // Block
        TComece tcomeceNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        TTermine ttermineNode6;
        tcomeceNode2 = (TComece)nodeArrayList1.get(0);
        {
            // Block
        }
        {
            // Block
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        listNode4 = (LinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        ttermineNode6 = (TTermine)nodeArrayList3.get(0);

        pblococomandosNode1 = new ABlocoComandos(tcomeceNode2, listNode3, listNode5, ttermineNode6);
        }
	nodeList.add(pblococomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce AAblococomandos4BlocoComandos */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoComandos pblococomandosNode1;
        {
            // Block
        TComece tcomeceNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        LinkedList<Object> listNode6 = new LinkedList<Object>();
        TTermine ttermineNode7;
        tcomeceNode2 = (TComece)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
            // Block
        LinkedList<Object> listNode5 = new LinkedList<Object>();
        listNode5 = (LinkedList)nodeArrayList3.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }
        ttermineNode7 = (TTermine)nodeArrayList4.get(0);

        pblococomandosNode1 = new ABlocoComandos(tcomeceNode2, listNode4, listNode6, ttermineNode7);
        }
	nodeList.add(pblococomandosNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce ADeclaracaoVariavelDecVarCons */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecVarCons pdecvarconsNode1;
        {
            // Block
        PDecVar pdecvarNode2;
        pdecvarNode2 = (PDecVar)nodeArrayList1.get(0);

        pdecvarconsNode1 = new ADeclaracaoVariavelDecVarCons(pdecvarNode2);
        }
	nodeList.add(pdecvarconsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce ADeclaracaoConstanteDecVarCons */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDecVarCons pdecvarconsNode1;
        {
            // Block
        PDecCons pdecconsNode2;
        pdecconsNode2 = (PDecCons)nodeArrayList1.get(0);

        pdecvarconsNode1 = new ADeclaracaoConstanteDecVarCons(pdecconsNode2);
        }
	nodeList.add(pdecvarconsNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce ARealValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumReal tnumrealNode2;
        tnumrealNode2 = (TNumReal)nodeArrayList1.get(0);

        pvalorNode1 = new ARealValor(tnumrealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce ADecimalValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumDecimal tnumdecimalNode2;
        tnumdecimalNode2 = (TNumDecimal)nodeArrayList1.get(0);

        pvalorNode1 = new ADecimalValor(tnumdecimalNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce ANumBinarioValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNumBinario tnumbinarioNode2;
        tnumbinarioNode2 = (TNumBinario)nodeArrayList1.get(0);

        pvalorNode1 = new ANumBinarioValor(tnumbinarioNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AStringValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TString tstringNode2;
        tstringNode2 = (TString)nodeArrayList1.get(0);

        pvalorNode1 = new AStringValor(tstringNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AIdValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pvalorNode1 = new AIdValor(tidentificadorNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AArrayValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        PValor pvalorNode2;
        TColcheteEsq tcolcheteesqNode3;
        PExp pexpNode4;
        TColcheteDir tcolchetedirNode5;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);
        tcolcheteesqNode3 = (TColcheteEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tcolchetedirNode5 = (TColcheteDir)nodeArrayList4.get(0);

        pvalorNode1 = new AArrayValor(pvalorNode2, tcolcheteesqNode3, pexpNode4, tcolchetedirNode5);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce AVerdadeValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TVerdadeiro tverdadeiroNode2;
        tverdadeiroNode2 = (TVerdadeiro)nodeArrayList1.get(0);

        pvalorNode1 = new AVerdadeValor(tverdadeiroNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce AFalsoValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TFalso tfalsoNode2;
        tfalsoNode2 = (TFalso)nodeArrayList1.get(0);

        pvalorNode1 = new AFalsoValor(tfalsoNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce ABlocoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PBlocoExpressoes pblocoexpressoesNode2;
        pblocoexpressoesNode2 = (PBlocoExpressoes)nodeArrayList1.get(0);

        pexpNode1 = new ABlocoExp(pblocoexpressoesNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new52() /* reduce ABooleanoExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExp pexpNode1;
        {
            // Block
        PExpBooleanoEOu pexpbooleanoeouNode2;
        pexpbooleanoeouNode2 = (PExpBooleanoEOu)nodeArrayList1.get(0);

        pexpNode1 = new ABooleanoExp(pexpbooleanoeouNode2);
        }
	nodeList.add(pexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new53() /* reduce AExpSomaExpBooleanoEOu */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpBooleanoEOu pexpbooleanoeouNode1;
        {
            // Block
        PExpNegacao pexpnegacaoNode2;
        pexpnegacaoNode2 = (PExpNegacao)nodeArrayList1.get(0);

        pexpbooleanoeouNode1 = new AExpSomaExpBooleanoEOu(pexpnegacaoNode2);
        }
	nodeList.add(pexpbooleanoeouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new54() /* reduce ABooleanoOuExpBooleanoEOu */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpBooleanoEOu pexpbooleanoeouNode1;
        {
            // Block
        PExpBooleanoEOu pexpbooleanoeouNode2;
        TOu touNode3;
        PExpNegacao pexpnegacaoNode4;
        pexpbooleanoeouNode2 = (PExpBooleanoEOu)nodeArrayList1.get(0);
        touNode3 = (TOu)nodeArrayList2.get(0);
        pexpnegacaoNode4 = (PExpNegacao)nodeArrayList3.get(0);

        pexpbooleanoeouNode1 = new ABooleanoOuExpBooleanoEOu(pexpbooleanoeouNode2, touNode3, pexpnegacaoNode4);
        }
	nodeList.add(pexpbooleanoeouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new55() /* reduce ABooleanoEExpBooleanoEOu */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpBooleanoEOu pexpbooleanoeouNode1;
        {
            // Block
        PExpBooleanoEOu pexpbooleanoeouNode2;
        TE teNode3;
        PExpNegacao pexpnegacaoNode4;
        pexpbooleanoeouNode2 = (PExpBooleanoEOu)nodeArrayList1.get(0);
        teNode3 = (TE)nodeArrayList2.get(0);
        pexpnegacaoNode4 = (PExpNegacao)nodeArrayList3.get(0);

        pexpbooleanoeouNode1 = new ABooleanoEExpBooleanoEOu(pexpbooleanoeouNode2, teNode3, pexpnegacaoNode4);
        }
	nodeList.add(pexpbooleanoeouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new56() /* reduce AExpNegacaoExpNegacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpNegacao pexpnegacaoNode1;
        {
            // Block
        TNegacao tnegacaoNode2;
        PExpNegacao pexpnegacaoNode3;
        tnegacaoNode2 = (TNegacao)nodeArrayList1.get(0);
        pexpnegacaoNode3 = (PExpNegacao)nodeArrayList2.get(0);

        pexpnegacaoNode1 = new AExpNegacaoExpNegacao(tnegacaoNode2, pexpnegacaoNode3);
        }
	nodeList.add(pexpnegacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new57() /* reduce AExpBooleanoCmpExpNegacao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpNegacao pexpnegacaoNode1;
        {
            // Block
        PExpBooleanoCmp pexpbooleanocmpNode2;
        pexpbooleanocmpNode2 = (PExpBooleanoCmp)nodeArrayList1.get(0);

        pexpnegacaoNode1 = new AExpBooleanoCmpExpNegacao(pexpbooleanocmpNode2);
        }
	nodeList.add(pexpnegacaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new58() /* reduce AExpOpSomaExpBooleanoCmp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpBooleanoCmp pexpbooleanocmpNode1;
        {
            // Block
        PExpOpSoma pexpopsomaNode2;
        pexpopsomaNode2 = (PExpOpSoma)nodeArrayList1.get(0);

        pexpbooleanocmpNode1 = new AExpOpSomaExpBooleanoCmp(pexpopsomaNode2);
        }
	nodeList.add(pexpbooleanocmpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new59() /* reduce AComparacaoMaiorExpBooleanoCmp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpBooleanoCmp pexpbooleanocmpNode1;
        {
            // Block
        PExpBooleanoCmp pexpbooleanocmpNode2;
        TMaior tmaiorNode3;
        PExpOpSoma pexpopsomaNode4;
        pexpbooleanocmpNode2 = (PExpBooleanoCmp)nodeArrayList1.get(0);
        tmaiorNode3 = (TMaior)nodeArrayList2.get(0);
        pexpopsomaNode4 = (PExpOpSoma)nodeArrayList3.get(0);

        pexpbooleanocmpNode1 = new AComparacaoMaiorExpBooleanoCmp(pexpbooleanocmpNode2, tmaiorNode3, pexpopsomaNode4);
        }
	nodeList.add(pexpbooleanocmpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new60() /* reduce AComparacaoMaiorIgualExpBooleanoCmp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpBooleanoCmp pexpbooleanocmpNode1;
        {
            // Block
        PExpBooleanoCmp pexpbooleanocmpNode2;
        TMaiorIgual tmaiorigualNode3;
        PExpOpSoma pexpopsomaNode4;
        pexpbooleanocmpNode2 = (PExpBooleanoCmp)nodeArrayList1.get(0);
        tmaiorigualNode3 = (TMaiorIgual)nodeArrayList2.get(0);
        pexpopsomaNode4 = (PExpOpSoma)nodeArrayList3.get(0);

        pexpbooleanocmpNode1 = new AComparacaoMaiorIgualExpBooleanoCmp(pexpbooleanocmpNode2, tmaiorigualNode3, pexpopsomaNode4);
        }
	nodeList.add(pexpbooleanocmpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new61() /* reduce AComparacaoIgualExpBooleanoCmp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpBooleanoCmp pexpbooleanocmpNode1;
        {
            // Block
        PExpBooleanoCmp pexpbooleanocmpNode2;
        TIgualdade tigualdadeNode3;
        PExpOpSoma pexpopsomaNode4;
        pexpbooleanocmpNode2 = (PExpBooleanoCmp)nodeArrayList1.get(0);
        tigualdadeNode3 = (TIgualdade)nodeArrayList2.get(0);
        pexpopsomaNode4 = (PExpOpSoma)nodeArrayList3.get(0);

        pexpbooleanocmpNode1 = new AComparacaoIgualExpBooleanoCmp(pexpbooleanocmpNode2, tigualdadeNode3, pexpopsomaNode4);
        }
	nodeList.add(pexpbooleanocmpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new62() /* reduce AOp2ExpOpSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpOpSoma pexpopsomaNode1;
        {
            // Block
        PExpSubtracao pexpsubtracaoNode2;
        pexpsubtracaoNode2 = (PExpSubtracao)nodeArrayList1.get(0);

        pexpopsomaNode1 = new AOp2ExpOpSoma(pexpsubtracaoNode2);
        }
	nodeList.add(pexpopsomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new63() /* reduce ASomaExpOpSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpOpSoma pexpopsomaNode1;
        {
            // Block
        PExpOpSoma pexpopsomaNode2;
        TSoma tsomaNode3;
        PExpSubtracao pexpsubtracaoNode4;
        pexpopsomaNode2 = (PExpOpSoma)nodeArrayList1.get(0);
        tsomaNode3 = (TSoma)nodeArrayList2.get(0);
        pexpsubtracaoNode4 = (PExpSubtracao)nodeArrayList3.get(0);

        pexpopsomaNode1 = new ASomaExpOpSoma(pexpopsomaNode2, tsomaNode3, pexpsubtracaoNode4);
        }
	nodeList.add(pexpopsomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new64() /* reduce AMenosSubtracaoExpSubtracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpSubtracao pexpsubtracaoNode1;
        {
            // Block
        PExpSubtracao pexpsubtracaoNode2;
        TMenos tmenosNode3;
        PExpOpMult pexpopmultNode4;
        pexpsubtracaoNode2 = (PExpSubtracao)nodeArrayList1.get(0);
        tmenosNode3 = (TMenos)nodeArrayList2.get(0);
        pexpopmultNode4 = (PExpOpMult)nodeArrayList3.get(0);

        pexpsubtracaoNode1 = new AMenosSubtracaoExpSubtracao(pexpsubtracaoNode2, tmenosNode3, pexpopmultNode4);
        }
	nodeList.add(pexpsubtracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new65() /* reduce AExpOpMultExpSubtracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpSubtracao pexpsubtracaoNode1;
        {
            // Block
        PExpOpMult pexpopmultNode2;
        pexpopmultNode2 = (PExpOpMult)nodeArrayList1.get(0);

        pexpsubtracaoNode1 = new AExpOpMultExpSubtracao(pexpopmultNode2);
        }
	nodeList.add(pexpsubtracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new66() /* reduce AExpValExpOpMult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpOpMult pexpopmultNode1;
        {
            // Block
        PExpTernario pexpternarioNode2;
        pexpternarioNode2 = (PExpTernario)nodeArrayList1.get(0);

        pexpopmultNode1 = new AExpValExpOpMult(pexpternarioNode2);
        }
	nodeList.add(pexpopmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new67() /* reduce AMultiplicacaoExpOpMult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpOpMult pexpopmultNode1;
        {
            // Block
        PExpOpMult pexpopmultNode2;
        TMult tmultNode3;
        PExpTernario pexpternarioNode4;
        pexpopmultNode2 = (PExpOpMult)nodeArrayList1.get(0);
        tmultNode3 = (TMult)nodeArrayList2.get(0);
        pexpternarioNode4 = (PExpTernario)nodeArrayList3.get(0);

        pexpopmultNode1 = new AMultiplicacaoExpOpMult(pexpopmultNode2, tmultNode3, pexpternarioNode4);
        }
	nodeList.add(pexpopmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new68() /* reduce ADivisaoExpOpMult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpOpMult pexpopmultNode1;
        {
            // Block
        PExpOpMult pexpopmultNode2;
        TDiv tdivNode3;
        PExpTernario pexpternarioNode4;
        pexpopmultNode2 = (PExpOpMult)nodeArrayList1.get(0);
        tdivNode3 = (TDiv)nodeArrayList2.get(0);
        pexpternarioNode4 = (PExpTernario)nodeArrayList3.get(0);

        pexpopmultNode1 = new ADivisaoExpOpMult(pexpopmultNode2, tdivNode3, pexpternarioNode4);
        }
	nodeList.add(pexpopmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new69() /* reduce ARestoExpOpMult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpOpMult pexpopmultNode1;
        {
            // Block
        PExpOpMult pexpopmultNode2;
        TMod tmodNode3;
        PExpTernario pexpternarioNode4;
        pexpopmultNode2 = (PExpOpMult)nodeArrayList1.get(0);
        tmodNode3 = (TMod)nodeArrayList2.get(0);
        pexpternarioNode4 = (PExpTernario)nodeArrayList3.get(0);

        pexpopmultNode1 = new ARestoExpOpMult(pexpopmultNode2, tmodNode3, pexpternarioNode4);
        }
	nodeList.add(pexpopmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new70() /* reduce ATernarioExpTernario */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpTernario pexpternarioNode1;
        {
            // Block
        TSe tseNode2;
        TParEsq tparesqNode3;
        PExp pexpNode4;
        TParDir tpardirNode5;
        PExp pexpNode6;
        TSenao tsenaoNode7;
        PExpTernario pexpternarioNode8;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);
        pexpNode6 = (PExp)nodeArrayList5.get(0);
        tsenaoNode7 = (TSenao)nodeArrayList6.get(0);
        pexpternarioNode8 = (PExpTernario)nodeArrayList7.get(0);

        pexpternarioNode1 = new ATernarioExpTernario(tseNode2, tparesqNode3, pexpNode4, tpardirNode5, pexpNode6, tsenaoNode7, pexpternarioNode8);
        }
	nodeList.add(pexpternarioNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new71() /* reduce AExpValExpTernario */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpTernario pexpternarioNode1;
        {
            // Block
        PExpNegativo pexpnegativoNode2;
        pexpnegativoNode2 = (PExpNegativo)nodeArrayList1.get(0);

        pexpternarioNode1 = new AExpValExpTernario(pexpnegativoNode2);
        }
	nodeList.add(pexpternarioNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new72() /* reduce AExpNegativoExpNegativo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpNegativo pexpnegativoNode1;
        {
            // Block
        TMenos tmenosNode2;
        PExpNegativo pexpnegativoNode3;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);
        pexpnegativoNode3 = (PExpNegativo)nodeArrayList2.get(0);

        pexpnegativoNode1 = new AExpNegativoExpNegativo(tmenosNode2, pexpnegativoNode3);
        }
	nodeList.add(pexpnegativoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new73() /* reduce AExpValExpNegativo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpNegativo pexpnegativoNode1;
        {
            // Block
        PExpVal pexpvalNode2;
        pexpvalNode2 = (PExpVal)nodeArrayList1.get(0);

        pexpnegativoNode1 = new AExpValExpNegativo(pexpvalNode2);
        }
	nodeList.add(pexpnegativoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new74() /* reduce AArrayExpVal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpVal pexpvalNode1;
        {
            // Block
        PArrayComp parraycompNode2;
        parraycompNode2 = (PArrayComp)nodeArrayList1.get(0);

        pexpvalNode1 = new AArrayExpVal(parraycompNode2);
        }
	nodeList.add(pexpvalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new75() /* reduce AParenteseExpVal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpVal pexpvalNode1;
        {
            // Block
        TParEsq tparesqNode2;
        PExp pexpNode3;
        TParDir tpardirNode4;
        tparesqNode2 = (TParEsq)nodeArrayList1.get(0);
        pexpNode3 = (PExp)nodeArrayList2.get(0);
        tpardirNode4 = (TParDir)nodeArrayList3.get(0);

        pexpvalNode1 = new AParenteseExpVal(tparesqNode2, pexpNode3, tpardirNode4);
        }
	nodeList.add(pexpvalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new76() /* reduce ATipoBaseExpVal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpVal pexpvalNode1;
        {
            // Block
        TTipoBase ttipobaseNode2;
        ttipobaseNode2 = (TTipoBase)nodeArrayList1.get(0);

        pexpvalNode1 = new ATipoBaseExpVal(ttipobaseNode2);
        }
	nodeList.add(pexpvalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new77() /* reduce AFuncaoExpVal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpVal pexpvalNode1;
        {
            // Block
        PChamadaFuncao pchamadafuncaoNode2;
        pchamadafuncaoNode2 = (PChamadaFuncao)nodeArrayList1.get(0);

        pexpvalNode1 = new AFuncaoExpVal(pchamadafuncaoNode2);
        }
	nodeList.add(pexpvalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new78() /* reduce AValorExpVal */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpVal pexpvalNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pexpvalNode1 = new AValorExpVal(pvalorNode2);
        }
	nodeList.add(pexpvalNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new79() /* reduce AAblocoexpressoes1BlocoExpressoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoExpressoes pblocoexpressoesNode1;
        {
            // Block
        TComece tcomeceNode2;
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        PExp pexpNode4;
        TTermine ttermineNode5;
        tcomeceNode2 = (TComece)nodeArrayList1.get(0);
        {
            // Block
        }
        pexpNode4 = (PExp)nodeArrayList2.get(0);
        ttermineNode5 = (TTermine)nodeArrayList3.get(0);

        pblocoexpressoesNode1 = new ABlocoExpressoes(tcomeceNode2, listNode3, pexpNode4, ttermineNode5);
        }
	nodeList.add(pblocoexpressoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new80() /* reduce AAblocoexpressoes2BlocoExpressoes */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PBlocoExpressoes pblocoexpressoesNode1;
        {
            // Block
        TComece tcomeceNode2;
        LinkedList<Object> listNode4 = new LinkedList<Object>();
        PExp pexpNode5;
        TTermine ttermineNode6;
        tcomeceNode2 = (TComece)nodeArrayList1.get(0);
        {
            // Block
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        listNode3 = (LinkedList)nodeArrayList2.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        pexpNode5 = (PExp)nodeArrayList3.get(0);
        ttermineNode6 = (TTermine)nodeArrayList4.get(0);

        pblocoexpressoesNode1 = new ABlocoExpressoes(tcomeceNode2, listNode4, pexpNode5, ttermineNode6);
        }
	nodeList.add(pblocoexpressoesNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new81() /* reduce AChamadaFuncao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PChamadaFuncao pchamadafuncaoNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TParEsq tparesqNode3;
        PListaExp plistaexpNode4;
        TParDir tpardirNode5;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        plistaexpNode4 = (PListaExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);

        pchamadafuncaoNode1 = new AChamadaFuncao(tidentificadorNode2, tparesqNode3, plistaexpNode4, tpardirNode5);
        }
	nodeList.add(pchamadafuncaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new82() /* reduce AChamadaProcedimento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PChamadaProcedimento pchamadaprocedimentoNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TParEsq tparesqNode3;
        PListaExp plistaexpNode4;
        TParDir tpardirNode5;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tparesqNode3 = (TParEsq)nodeArrayList2.get(0);
        plistaexpNode4 = (PListaExp)nodeArrayList3.get(0);
        tpardirNode5 = (TParDir)nodeArrayList4.get(0);

        pchamadaprocedimentoNode1 = new AChamadaProcedimento(tidentificadorNode2, tparesqNode3, plistaexpNode4, tpardirNode5);
        }
	nodeList.add(pchamadaprocedimentoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new83() /* reduce AConteudoListaListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PListaExp plistaexpNode1;
        {
            // Block
        PExp pexpNode2;
        PSeparadorListaExp pseparadorlistaexpNode3;
        pexpNode2 = (PExp)nodeArrayList1.get(0);
        pseparadorlistaexpNode3 = (PSeparadorListaExp)nodeArrayList2.get(0);

        plistaexpNode1 = new AConteudoListaListaExp(pexpNode2, pseparadorlistaexpNode3);
        }
	nodeList.add(plistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new84() /* reduce AListaVaziaListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PListaExp plistaexpNode1;
        {
            // Block

        plistaexpNode1 = new AListaVaziaListaExp();
        }
	nodeList.add(plistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new85() /* reduce AListaExpSeparadorListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeparadorListaExp pseparadorlistaexpNode1;
        {
            // Block
        PSeparadorListaExp pseparadorlistaexpNode2;
        TSeparador tseparadorNode3;
        PExp pexpNode4;
        pseparadorlistaexpNode2 = (PSeparadorListaExp)nodeArrayList1.get(0);
        tseparadorNode3 = (TSeparador)nodeArrayList2.get(0);
        pexpNode4 = (PExp)nodeArrayList3.get(0);

        pseparadorlistaexpNode1 = new AListaExpSeparadorListaExp(pseparadorlistaexpNode2, tseparadorNode3, pexpNode4);
        }
	nodeList.add(pseparadorlistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new86() /* reduce AVazioSeparadorListaExp */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PSeparadorListaExp pseparadorlistaexpNode1;
        {
            // Block

        pseparadorlistaexpNode1 = new AVazioSeparadorListaExp();
        }
	nodeList.add(pseparadorlistaexpNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new87() /* reduce ATerminal$FimPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PFimPrograma pfimprogramaNode1;
        pfimprogramaNode1 = (PFimPrograma)nodeArrayList1.get(0);
	if(pfimprogramaNode1 != null)
	{
	  listNode2.add(pfimprogramaNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new88() /* reduce ANonTerminal$FimPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PFimPrograma pfimprogramaNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pfimprogramaNode2 = (PFimPrograma)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pfimprogramaNode2 != null)
	{
	  listNode3.add(pfimprogramaNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new89() /* reduce ATerminal$DecVarCons */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDecVarCons pdecvarconsNode1;
        pdecvarconsNode1 = (PDecVarCons)nodeArrayList1.get(0);
	if(pdecvarconsNode1 != null)
	{
	  listNode2.add(pdecvarconsNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new90() /* reduce ANonTerminal$DecVarCons */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDecVarCons pdecvarconsNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdecvarconsNode2 = (PDecVarCons)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdecvarconsNode2 != null)
	{
	  listNode3.add(pdecvarconsNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new91() /* reduce ATerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PComando pcomandoNode1;
        pcomandoNode1 = (PComando)nodeArrayList1.get(0);
	if(pcomandoNode1 != null)
	{
	  listNode2.add(pcomandoNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new92() /* reduce ANonTerminal$Comando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PComando pcomandoNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pcomandoNode2 = (PComando)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pcomandoNode2 != null)
	{
	  listNode3.add(pcomandoNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new93() /* reduce ATerminal$DecCons */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode2 = new LinkedList<Object>();
        {
            // Block
        PDecCons pdecconsNode1;
        pdecconsNode1 = (PDecCons)nodeArrayList1.get(0);
	if(pdecconsNode1 != null)
	{
	  listNode2.add(pdecconsNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new94() /* reduce ANonTerminal$DecCons */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        LinkedList<Object> listNode3 = new LinkedList<Object>();
        {
            // Block
        LinkedList<Object> listNode1 = new LinkedList<Object>();
        PDecCons pdecconsNode2;
        listNode1 = (LinkedList)nodeArrayList1.get(0);
        pdecconsNode2 = (PDecCons)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdecconsNode2 != null)
	{
	  listNode3.add(pdecconsNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 1}, {38, ACCEPT, -1}, },
			{{-1, REDUCE, 15}, {13, SHIFT, 3}, {30, SHIFT, 4}, {31, SHIFT, 5}, {34, SHIFT, 6}, },
			{{-1, REDUCE, 16}, },
			{{-1, ERROR, 4}, {29, SHIFT, 14}, },
			{{-1, ERROR, 5}, {29, SHIFT, 15}, },
			{{-1, ERROR, 6}, {29, SHIFT, 16}, },
			{{-1, REDUCE, 87}, },
			{{-1, REDUCE, 2}, },
			{{-1, REDUCE, 3}, },
			{{-1, REDUCE, 4}, },
			{{-1, ERROR, 11}, {35, SHIFT, 17}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 15}, {13, SHIFT, 3}, {34, SHIFT, 6}, {38, REDUCE, 0}, },
			{{-1, ERROR, 14}, {12, SHIFT, 19}, },
			{{-1, ERROR, 15}, {12, SHIFT, 19}, },
			{{-1, ERROR, 16}, {12, SHIFT, 19}, },
			{{-1, ERROR, 17}, {29, SHIFT, 23}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 10}, },
			{{-1, ERROR, 20}, {32, SHIFT, 24}, {37, SHIFT, 25}, },
			{{-1, ERROR, 21}, {32, SHIFT, 24}, {37, SHIFT, 28}, },
			{{-1, ERROR, 22}, {32, SHIFT, 24}, {37, SHIFT, 30}, },
			{{-1, ERROR, 23}, {37, SHIFT, 31}, },
			{{-1, ERROR, 24}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 8}, {26, SHIFT, 60}, },
			{{-1, ERROR, 26}, {25, SHIFT, 61}, },
			{{-1, REDUCE, 9}, },
			{{-1, ERROR, 28}, {26, SHIFT, 60}, },
			{{-1, ERROR, 29}, {25, SHIFT, 62}, },
			{{-1, ERROR, 30}, {27, SHIFT, 63}, },
			{{-1, ERROR, 31}, {27, SHIFT, 64}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 45}, },
			{{-1, ERROR, 35}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 76}, },
			{{-1, ERROR, 37}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {31, SHIFT, 5}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 38}, {27, SHIFT, 69}, },
			{{-1, ERROR, 39}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 50}, },
			{{-1, ERROR, 42}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 43}, {37, SHIFT, 72}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 47}, {27, SHIFT, 73}, },
			{{-1, REDUCE, 74}, },
			{{-1, REDUCE, 78}, {32, SHIFT, 74}, },
			{{-1, ERROR, 48}, {33, SHIFT, 75}, },
			{{-1, REDUCE, 52}, {19, SHIFT, 76}, {22, SHIFT, 77}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 57}, {7, SHIFT, 78}, {10, SHIFT, 79}, {11, SHIFT, 80}, },
			{{-1, REDUCE, 58}, {3, SHIFT, 81}, },
			{{-1, REDUCE, 62}, {4, SHIFT, 82}, },
			{{-1, REDUCE, 65}, {5, SHIFT, 83}, {6, SHIFT, 84}, {8, SHIFT, 85}, },
			{{-1, REDUCE, 66}, },
			{{-1, REDUCE, 71}, },
			{{-1, REDUCE, 73}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 77}, },
			{{-1, ERROR, 60}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 7}, },
			{{-1, REDUCE, 19}, {12, SHIFT, 87}, },
			{{-1, REDUCE, 19}, {12, SHIFT, 87}, },
			{{-1, REDUCE, 72}, },
			{{-1, REDUCE, 93}, },
			{{-1, ERROR, 67}, {15, SHIFT, 92}, },
			{{-1, ERROR, 68}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {31, SHIFT, 5}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 69}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 56}, },
			{{-1, ERROR, 71}, {28, SHIFT, 96}, },
			{{-1, ERROR, 72}, {9, SHIFT, 97}, },
			{{-1, REDUCE, 84}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 74}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 76}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 77}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 78}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {16, SHIFT, 38}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 79}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {16, SHIFT, 38}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 80}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {16, SHIFT, 38}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 81}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {16, SHIFT, 38}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 82}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {16, SHIFT, 38}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 83}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {16, SHIFT, 38}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 84}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {16, SHIFT, 38}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 85}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {16, SHIFT, 38}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 88}, {28, SHIFT, 111}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 90}, {32, SHIFT, 113}, {37, SHIFT, 114}, },
			{{-1, ERROR, 91}, {28, SHIFT, 115}, },
			{{-1, REDUCE, 79}, },
			{{-1, REDUCE, 94}, },
			{{-1, ERROR, 94}, {15, SHIFT, 116}, },
			{{-1, ERROR, 95}, {28, SHIFT, 117}, },
			{{-1, REDUCE, 75}, },
			{{-1, ERROR, 97}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 86}, },
			{{-1, ERROR, 99}, {28, SHIFT, 120}, },
			{{-1, ERROR, 100}, {33, SHIFT, 121}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 61}, {3, SHIFT, 81}, },
			{{-1, REDUCE, 60}, {3, SHIFT, 81}, },
			{{-1, REDUCE, 59}, {3, SHIFT, 81}, },
			{{-1, REDUCE, 63}, {4, SHIFT, 82}, },
			{{-1, REDUCE, 64}, {5, SHIFT, 83}, {6, SHIFT, 84}, {8, SHIFT, 85}, },
			{{-1, REDUCE, 67}, },
			{{-1, REDUCE, 68}, },
			{{-1, REDUCE, 69}, },
			{{-1, ERROR, 111}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 18}, {9, SHIFT, 123}, },
			{{-1, ERROR, 113}, {33, SHIFT, 124}, },
			{{-1, REDUCE, 22}, },
			{{-1, ERROR, 115}, {14, SHIFT, 125}, {16, SHIFT, 126}, {21, SHIFT, 127}, {37, SHIFT, 128}, },
			{{-1, REDUCE, 80}, },
			{{-1, ERROR, 117}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 118}, {33, SHIFT, 137}, },
			{{-1, REDUCE, 83}, {9, SHIFT, 138}, },
			{{-1, REDUCE, 81}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 17}, },
			{{-1, ERROR, 123}, {12, SHIFT, 87}, },
			{{-1, REDUCE, 24}, },
			{{-1, ERROR, 125}, {14, SHIFT, 125}, {15, SHIFT, 140}, {16, SHIFT, 126}, {21, SHIFT, 127}, {30, SHIFT, 4}, {31, SHIFT, 5}, {37, SHIFT, 128}, },
			{{-1, ERROR, 126}, {27, SHIFT, 147}, },
			{{-1, ERROR, 127}, {27, SHIFT, 148}, },
			{{-1, ERROR, 128}, {26, SHIFT, 60}, {27, SHIFT, 149}, },
			{{-1, ERROR, 129}, {25, SHIFT, 150}, },
			{{-1, REDUCE, 14}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 29}, },
			{{-1, REDUCE, 36}, },
			{{-1, ERROR, 135}, {25, SHIFT, 151}, },
			{{-1, ERROR, 136}, {17, SHIFT, 152}, },
			{{-1, REDUCE, 13}, },
			{{-1, ERROR, 138}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 21}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 91}, },
			{{-1, REDUCE, 89}, },
			{{-1, ERROR, 145}, {14, SHIFT, 125}, {15, SHIFT, 154}, {16, SHIFT, 126}, {21, SHIFT, 127}, {30, SHIFT, 4}, {31, SHIFT, 5}, {37, SHIFT, 128}, },
			{{-1, ERROR, 146}, {14, SHIFT, 125}, {15, SHIFT, 157}, {16, SHIFT, 126}, {21, SHIFT, 127}, {37, SHIFT, 128}, },
			{{-1, ERROR, 147}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, ERROR, 148}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 84}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {14, SHIFT, 37}, {16, SHIFT, 38}, {20, SHIFT, 39}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 35}, },
			{{-1, ERROR, 152}, {0, SHIFT, 32}, {1, SHIFT, 33}, {2, SHIFT, 34}, {4, SHIFT, 35}, {12, SHIFT, 36}, {16, SHIFT, 38}, {23, SHIFT, 40}, {24, SHIFT, 41}, {27, SHIFT, 42}, {32, SHIFT, 43}, {36, SHIFT, 44}, {37, SHIFT, 45}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 90}, },
			{{-1, ERROR, 156}, {14, SHIFT, 125}, {15, SHIFT, 163}, {16, SHIFT, 126}, {21, SHIFT, 127}, {37, SHIFT, 128}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 92}, },
			{{-1, ERROR, 159}, {28, SHIFT, 164}, },
			{{-1, ERROR, 160}, {28, SHIFT, 165}, },
			{{-1, ERROR, 161}, {28, SHIFT, 166}, },
			{{-1, REDUCE, 70}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 164}, {14, SHIFT, 125}, {16, SHIFT, 126}, {21, SHIFT, 127}, {37, SHIFT, 128}, },
			{{-1, ERROR, 165}, {14, SHIFT, 125}, {16, SHIFT, 126}, {21, SHIFT, 127}, {37, SHIFT, 128}, },
			{{-1, REDUCE, 82}, },
			{{-1, ERROR, 167}, {17, SHIFT, 172}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 30}, {17, REDUCE, 29}, },
			{{-1, REDUCE, 28}, },
			{{-1, REDUCE, 32}, },
			{{-1, ERROR, 172}, {14, SHIFT, 125}, {16, SHIFT, 126}, {21, SHIFT, 127}, {37, SHIFT, 128}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 33}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 1}, },
			{{-1, 2}, },
			{{-1, 7}, {13, 18}, },
			{{-1, 141}, {2, 8}, },
			{{-1, 142}, {2, 9}, {37, 66}, {68, 93}, },
			{{-1, 26}, },
			{{-1, 20}, {15, 21}, {16, 22}, },
			{{-1, 129}, {20, 27}, {21, 29}, },
			{{-1, 46}, },
			{{-1, 10}, },
			{{-1, 11}, },
			{{-1, 12}, },
			{{-1, 88}, {64, 91}, },
			{{-1, 112}, },
			{{-1, 89}, {123, 139}, },
			{{-1, 90}, },
			{{-1, 143}, {115, 130}, {146, 158}, {156, 158}, },
			{{-1, 131}, {164, 167}, {165, 170}, {172, 173}, },
			{{-1, 132}, {164, 168}, {165, 171}, {172, 174}, },
			{{-1, 133}, {164, 169}, },
			{{-1, 134}, },
			{{-1, 144}, {145, 155}, },
			{{-1, 47}, },
			{{-1, 98}, {24, 48}, {37, 67}, {42, 71}, {60, 86}, {68, 94}, {69, 95}, {74, 100}, {97, 118}, {111, 122}, {117, 136}, {138, 153}, {147, 159}, {148, 160}, },
			{{-1, 49}, },
			{{-1, 50}, {39, 70}, {76, 101}, {77, 102}, },
			{{-1, 51}, },
			{{-1, 52}, {78, 103}, {79, 104}, {80, 105}, },
			{{-1, 53}, {81, 106}, },
			{{-1, 54}, {82, 107}, },
			{{-1, 55}, {83, 108}, {84, 109}, {85, 110}, {152, 162}, },
			{{-1, 56}, {35, 65}, },
			{{-1, 57}, },
			{{-1, 58}, },
			{{-1, 59}, },
			{{-1, 135}, },
			{{-1, 99}, {149, 161}, },
			{{-1, 119}, },
			{{-1, 13}, },
			{{-1, 145}, },
			{{-1, 146}, {145, 156}, },
			{{-1, 68}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: '>>', 'var', 'const', 'funcao', 'procedimento'",
			"expecting: EOF",
			"expecting: 'procedimento'",
			"expecting: ':'",
			"expecting: '>>', 'funcao', 'procedimento', EOF",
			"expecting: tipo base",
			"expecting: '[', identificador",
			"expecting: identificador",
			"expecting: num decimal, num real, num binario, '-', tipo base, 'comece', 'se', 'nao', 'verdade', 'falso', '(', '[', string, identificador",
			"expecting: ';', '<<'",
			"expecting: ';'",
			"expecting: '<<'",
			"expecting: '('",
			"expecting: '+', '-', '*', '/', '=', '%', '|', '>=', '>', '>>', 'termine', 'senao', 'ou', 'e', ';', ')', '[', ']', 'funcao', 'procedimento', EOF",
			"expecting: num decimal, num real, num binario, '-', tipo base, 'verdade', 'falso', '(', '[', string, identificador",
			"expecting: '+', '-', '*', '/', '=', '%', '|', '>=', '>', '>>', 'termine', 'senao', 'ou', 'e', ';', ')', ']', 'funcao', 'procedimento', EOF",
			"expecting: num decimal, num real, num binario, '-', tipo base, 'comece', 'se', 'nao', 'verdade', 'falso', '(', 'const', '[', string, identificador",
			"expecting: num decimal, num real, num binario, '-', tipo base, 'se', 'nao', 'verdade', 'falso', '(', '[', string, identificador",
			"expecting: '+', '-', '*', '/', '=', '%', '|', '>=', '>', '>>', 'termine', 'senao', 'ou', 'e', ';', '(', ')', '[', ']', 'funcao', 'procedimento', EOF",
			"expecting: ']'",
			"expecting: '|', '>>', 'termine', 'senao', 'ou', 'e', ';', ')', ']', 'funcao', 'procedimento', EOF",
			"expecting: '=', '|', '>=', '>', '>>', 'termine', 'senao', 'ou', 'e', ';', ')', ']', 'funcao', 'procedimento', EOF",
			"expecting: '+', '=', '|', '>=', '>', '>>', 'termine', 'senao', 'ou', 'e', ';', ')', ']', 'funcao', 'procedimento', EOF",
			"expecting: '+', '-', '=', '|', '>=', '>', '>>', 'termine', 'senao', 'ou', 'e', ';', ')', ']', 'funcao', 'procedimento', EOF",
			"expecting: '|', '>>', 'termine', 'senao', ';', ')', ']', 'funcao', 'procedimento', EOF",
			"expecting: '>>', 'comece', 'termine', 'se', 'enquanto', 'var', 'const', 'funcao', 'procedimento', identificador",
			"expecting: num decimal, num real, num binario, '-', tipo base, '>>', 'comece', 'termine', 'se', 'nao', 'enquanto', 'verdade', 'falso', '(', 'var', 'const', '[', 'funcao', 'procedimento', string, identificador",
			"expecting: tipo base, ')'",
			"expecting: 'termine'",
			"expecting: ')'",
			"expecting: '|'",
			"expecting: num decimal, num real, num binario, '-', tipo base, 'comece', 'se', 'nao', 'verdade', 'falso', '(', ')', '[', string, identificador",
			"expecting: num decimal, num real, num binario, '-', tipo base, 'se', 'verdade', 'falso', '(', '[', string, identificador",
			"expecting: '|', ')'",
			"expecting: 'comece', 'se', 'enquanto', identificador",
			"expecting: 'comece', 'termine', 'se', 'enquanto', 'var', 'const', identificador",
			"expecting: '<<', '('",
			"expecting: '>>', 'comece', 'termine', 'se', 'enquanto', 'funcao', 'procedimento', identificador, EOF",
			"expecting: '>>', 'comece', 'termine', 'se', 'senao', 'enquanto', 'funcao', 'procedimento', identificador, EOF",
			"expecting: 'senao'",
			"expecting: 'comece', 'termine', 'se', 'enquanto', identificador",
        };*/
    private static int[] errors;
/*      {
			0, 1, 0, 2, 3, 3, 3, 4, 0, 0, 4, 2, 4, 4, 5, 5, 5, 3, 4, 6, 6, 6, 6, 7, 8, 9, 10, 10, 11, 10, 12, 12, 13, 13, 13, 14, 15, 16, 12, 17, 13, 13, 8, 7, 13, 18, 15, 13, 19, 20, 20, 21, 22, 23, 15, 15, 15, 15, 24, 15, 8, 25, 26, 27, 27, 15, 16, 28, 16, 8, 20, 29, 30, 31, 8, 6, 17, 17, 32, 32, 32, 32, 32, 32, 32, 32, 10, 6, 29, 33, 6, 29, 24, 16, 28, 29, 15, 8, 33, 29, 19, 20, 20, 22, 22, 22, 23, 15, 15, 15, 15, 8, 33, 19, 33, 34, 24, 8, 19, 33, 15, 13, 4, 5, 6, 35, 12, 12, 36, 10, 4, 37, 37, 38, 38, 10, 39, 15, 8, 33, 38, 35, 35, 40, 35, 35, 40, 8, 8, 31, 38, 38, 32, 33, 38, 35, 40, 38, 40, 29, 29, 29, 15, 38, 34, 34, 10, 39, 37, 38, 38, 37, 34, 38, 37, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
